// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    //The second bit helps us choose where our 
    //output should be at. 
    //(Unlike Mux we do this at first as 
    //DMUX is inverse of MUX).
    DMux(in=in, sel=sel[1], a=ao, b=bo);
    //With the help of first bit we find if we use
    //a or b or c or d.
    DMux(in=ao, sel=sel[0], a=a, b=b);
    DMux(in=bo, sel=sel[0], a=c, b=d);
}